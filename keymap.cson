# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'atom-workspace':
  'cmd->': 'application:open-your-keymap'
  'alt->': 'application:open-your-snippets'
  'cmd-ctrl-p': 'tree-view:collapse-all'

'body':
  'cmd-o': 'tree-view:toggle-focus'

'.platform-darwin .tree-view':
  'cmd-r': 'tree-view:rename'
  'alt-right': 'tree-view:expand-item'
  'cmd-ctrl-c': 'tree-view:copy-project-path'
  'cmd-shift-r': 'tree-view:show-current-file-in-file-manager'
  'h': 'tree-view:recursive-collapse-directory'
  'left': 'tree-view:recursive-collapse-directory'

'.platform-darwin atom-workspace':
  'cmd-\\': 'tree-view:toggle'
  'cmd-alt-g': 'github:toggle-git-tab'
  # Commands that were removed from git-plus
  'cmd-shift-c': 'git-plus:commit'
  'cmd-shift-a': 'git-plus:add-all-and-commit'

'.results-view':
  'k': 'core:move-up'
  'j': 'core:move-down'
  'h': 'core:move-left'
  'l': 'core:move-right'

'atom-text-editor, .select-list':
  'ctrl-k': 'core:move-up'
  'ctrl-j': 'core:move-down'
  'ctrl-h': 'core:move-left'
  'ctrl-l': 'core:move-right'

'.select-list':
  'shift-tab': 'core:move-up'
  'tab': 'core:move-down'

'atom-text-editor, .platform-darwin atom-text-editor:not([mini])':
  'cmd-shift-s': 'spell-check:correct-misspelling'
  'cmd-b': 'goto-definition:go'
  'cmd-:': 'trailing-semicolon:comma'
  'cmd-alt-up': 'multi-cursor:expandUp'
  'cmd-alt-down': 'multi-cursor:expandDown'
  'cmd-m': 'bracket-matcher:go-to-matching-bracket'
  'cmd-M': 'bracket-matcher:select-inside-brackets'
  'cmd-r': 'tree-view:reveal-active-file'
  'cmd-o': 'tree-view:toggle-focus'
  'cmd-i': 'cursor-history:prev'
  'cmd-shift-i': 'cursor-history:next'
  'cmd-shift-e': 'open-similar:open'
  'cmd-p': 'typescript:show-type'
  'cmd-ctrl-c': 'editor:copy-project-path'
  'cmd-shift-r': 'tree-view:show-current-file-in-file-manager'
  'cmd-;': 'trailing-semicolon:semicolon'
  'ctrl-alt-up': 'editor:select-larger-syntax-node'
  'ctrl-alt-down': 'editor:select-smaller-syntax-node'
  'alt-up': 'block-travel:move-up'
  'alt-down': 'block-travel:move-down'
  'cmd-B': 'fuzzy-finder:toggle-buffer-finder'
  'alt-t': 'swap-selection:right'
  'ctrl-alt-cmd-c': 'macros:cycleVariableType'
  'ctrl-cmd-k': 'editor:move-line-up'
  'ctrl-cmd-j': 'editor:move-line-down'
  'alt-k': 'block-travel:move-up'
  'alt-j': 'block-travel:move-down'
  'cmd-escape': 'core:cancel'
  'cmd-ctrl-h': 'window:focus-pane-on-left'
  'cmd-ctrl-l': 'window:focus-pane-on-right'
  'cmd-alt-k': 'multi-cursor:expandUp'
  'cmd-alt-j': 'multi-cursor:expandDown'
  'cmd-l': 'editor:move-to-end-of-screen-line'
  'alt-l': 'editor:move-to-end-of-word'
  'cmd-h': 'editor:move-to-first-character-of-line'
  'alt-h': 'editor:move-to-beginning-of-word'
  'ctrl-tab': 'snippets:next-tab-stop'

'body atom-text-editor.autocomplete-active':
  'tab': 'autocomplete-plus:move-down'
  'shift-tab': 'autocomplete-plus:move-up'

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  'shift-h': 'core:select-left'
  'shift-l': 'core:select-right'
  'shift-j': 'core:select-down'
  'shift-k': 'core:select-up'
  'space': 'vim-mode-plus:toggle-fold'
  'cmd-j': 'vim-mode-plus:join'
  'shift-u': 'vim-mode-plus:upper-case-first'
  'cmd-shift-u': 'vim-mode-plus:lower-case-first'

'.platform-darwin atom-text-editor[data-grammar="source go"]':
  'cmd-b': 'golang:godef'

'.platform-darwin':
  'cmd-alt-l': 'pane:show-next-item'
  'cmd-alt-h': 'pane:show-previous-item'
  'shift-cmd-o': 'tabs:close-other-tabs'
  'ctrl-cmd-o': 'tabs:close-tabs-to-right'

'.platform-darwin atom-text-editor':
  'shift-alt-cmd-l': 'window:toggle-right-dock'
  'shift-alt-cmd-h': 'window:toggle-left-dock'
  'shift-alt-cmd-j': 'window:toggle-bottom-dock'
  'shift-ctrl-k': 'core:select-up'
  'shift-ctrl-j': 'core:select-down'
  'shift-ctrl-h': 'core:select-left'
  'shift-ctrl-l': 'core:select-right'
  'alt-shift-l': 'editor:select-to-end-of-word'
  'cmd-shift-l': 'editor:select-to-end-of-line'
  'alt-shift-h': 'editor:select-to-beginning-of-word'
  'cmd-shift-h': 'editor:select-to-first-character-of-line'
  'cmd-shift-j': 'core:select-to-bottom'
  'alt-shift-j': 'block-travel:select-down'
  'cmd-shift-k': 'core:select-to-top'
  'alt-shift-k': 'block-travel:select-up'
  'cmd-shift-V': 'macros:pasteWithCommas'
  'ctrl-cmd-shift-V': 'macros:pasteWithCommaNewlines'
  'ctrl-p': 'macros:togglePointers'
  'cmd-ctrl-b': 'atom-beautify:beautify-editor'
  'cmd-ctrl-b': 'atom-beautify:beautify-editor'
  'alt-shift-p': 'macros:pivotArgs'
