# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing 'snip' and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'.source.js':
  'Console message':
    'prefix': 'log'
    'body': 'console.log(\'$1\',$1);'

'.source.ts':
  'Console message':
    'prefix': 'lo'
    'body': 'console.log(\'$1\');'
  'Console message with variable':
    'prefix': 'log'
    'body': 'console.log(\'$1\', $1);'
  'Promise console log':
    'prefix': 'plog'
    'body': '.then($1 => console.log(\'$1\', $1) || $1)'
  'Observable console log':
    'prefix': 'olog'
    'body': '.do($1 => console.log(\'$1\', $1))'
  'TSlint disable max-line-length':
    'prefix': 'tsl'
    'body': '// tslint:disable:max-line-length\n$1// tslint:enable:max-line-length'
